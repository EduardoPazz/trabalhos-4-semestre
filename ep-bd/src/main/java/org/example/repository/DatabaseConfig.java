package org.example.repository;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class DatabaseConfig {

  @Bean
  public static Connection databaseConnection() throws SQLException {
    String url = "jdbc:postgresql://localhost/ep_db";
    Properties props = new Properties();
    props.setProperty("user", "ep_db_user");
    props.setProperty("password", "1234");
    return DriverManager.getConnection(url, props);
  }

  public static void setup() throws SQLException {
    var connection = databaseConnection();

    var statement = connection.createStatement();

    try (statement) {
      boolean hasAlreadySetup = isDatabaseAlreadySetup(statement);

      if (hasAlreadySetup) {
        return;
      }

      createTables(statement);
      createTriggers(statement);
      populateTables(statement);
    }
  }

  private static boolean isDatabaseAlreadySetup(Statement statement)
      throws SQLException {

    ResultSet resultSet = statement.executeQuery("""
        SELECT * FROM pg_catalog.pg_tables WHERE schemaname = 'public';
        """);

    boolean hasAlreadySetup = resultSet.next();
    return hasAlreadySetup;
  }

  private static void createTables(Statement statement) throws SQLException {
    statement.execute("""
        BEGIN;

        CREATE TYPE TIPO_ORGANIZACAO AS ENUM ('GOVERNAMENTAL', 'NÃO GOVERNAMENTAL', 'INTERNACIONAL');
        CREATE TYPE TIPO_AJUDA AS ENUM ('MÉDICA', 'DIPLOMÁTICA', 'PRESENCIAL');

        CREATE DOMAIN CONTAGEM_NUMERICA AS INT NULL CHECK (VALUE >= 0);

        CREATE TABLE CONFLITO(
          CODIGO INT NOT NULL GENERATED ALWAYS AS IDENTITY,
          NOME VARCHAR(100) NOT NULL,
          NR_MORTOS CONTAGEM_NUMERICA, /*Checar se >= 0*/
          NR_FERIDOS CONTAGEM_NUMERICA, /*Checar se >= 0*/
          FLAG_RACIAL BOOL,
          FLAG_TERRITORIAL BOOL,
          FLAG_RELIGIOSO BOOL,
          FLAG_ECONOMICO BOOL,
          PRIMARY KEY(CODIGO)
        );

        CREATE TABLE GRUPO_ARMADO(
          CODIGO INT NOT NULL GENERATED ALWAYS AS IDENTITY,
          NOME VARCHAR(100) NOT NULL,
          PRIMARY KEY(CODIGO)
        );

        CREATE TABLE ORGANIZACAO(
          CODIGO INT NOT NULL GENERATED ALWAYS AS IDENTITY,
          NOME VARCHAR(100) NOT NULL,
          TIPO TIPO_ORGANIZACAO NOT NULL,
          ORGANIZACAO_DEPENDENCIA INT NULL,
          PRIMARY KEY(CODIGO),
          FOREIGN KEY (ORGANIZACAO_DEPENDENCIA) REFERENCES ORGANIZACAO (CODIGO) ON DELETE SET NULL
        );

        CREATE TABLE TRAFICANTE(
          NOME VARCHAR(100) NOT NULL,
          PRIMARY KEY (NOME)
        );

        CREATE TABLE TIPO_ARMA(
          NOME VARCHAR(100) NOT NULL,
          INDICADOR_DESTRUICAO CONTAGEM_NUMERICA, /*Checar se >= 0*/
          PRIMARY KEY(NOME)
        );

        CREATE TABLE RACIAL(
          ID INT NOT NULL GENERATED ALWAYS AS IDENTITY,
          CODIGO_CONFLITO INT NOT NULL,
          PRIMARY KEY(ID),
          FOREIGN KEY (CODIGO_CONFLITO) REFERENCES CONFLITO (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
        );

        CREATE TABLE ETNIA_ENFRENTADA(
          ID_RACIAL INT NOT NULL,
          ID INT NOT NULL GENERATED ALWAYS AS IDENTITY,
          ETNIA VARCHAR(100) NOT NULL,
          PRIMARY KEY (ID),
          FOREIGN KEY (ID_RACIAL) REFERENCES RACIAL (ID) ON DELETE CASCADE ON UPDATE CASCADE /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
        );

        CREATE TABLE TERRITORIAL(
          ID INT NOT NULL GENERATED ALWAYS AS IDENTITY,
          CODIGO_CONFLITO INT NOT NULL,
          PRIMARY KEY(ID),
          FOREIGN KEY (CODIGO_CONFLITO) REFERENCES CONFLITO (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
        );

        CREATE TABLE REGIAO_AFETADA(
          ID_TERRITORIAL INT NOT NULL,
          ID INT NOT NULL GENERATED ALWAYS AS IDENTITY,
          REGIAO VARCHAR(100) NOT NULL,
          PRIMARY KEY (ID),
          FOREIGN KEY (ID_TERRITORIAL) REFERENCES TERRITORIAL (ID) ON DELETE CASCADE ON UPDATE CASCADE /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
        );

        CREATE TABLE RELIGIOSO(
          ID INT NOT NULL GENERATED ALWAYS AS IDENTITY,
          CODIGO_CONFLITO INT NOT NULL,
          PRIMARY KEY(ID),
          FOREIGN KEY (CODIGO_CONFLITO) REFERENCES CONFLITO (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
        );

        CREATE TABLE RELIGIAO_AFETADA(
          ID_RELIGIOSO INT NOT NULL,
          ID INT NOT NULL GENERATED ALWAYS AS IDENTITY,
          REILIGIAO VARCHAR(100) NOT NULL,
          PRIMARY KEY (ID),
          FOREIGN KEY (ID_RELIGIOSO) REFERENCES RELIGIOSO (ID) ON DELETE CASCADE ON UPDATE CASCADE /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
        );

        CREATE TABLE ECONOMICO(
          ID INT NOT NULL GENERATED ALWAYS AS IDENTITY,
          CODIGO_CONFLITO INT NOT NULL,
          PRIMARY KEY(ID),
          FOREIGN KEY (CODIGO_CONFLITO) REFERENCES CONFLITO (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
        );

        CREATE TABLE MATERIA_PRIMA_DISPUTADA(
          ID_ECONOMICO INT NOT NULL,
          ID INT NOT NULL GENERATED ALWAYS AS IDENTITY,
          MATERIA_PRIMA VARCHAR(100) NOT NULL,
          PRIMARY KEY (ID),
          FOREIGN KEY (ID_ECONOMICO) REFERENCES ECONOMICO (ID) ON DELETE CASCADE ON UPDATE CASCADE /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
        );

        CREATE TABLE PAISES_AFETADOS(
          CODIGO_CONFLITO INT NOT NULL,
          NOME VARCHAR(100) NOT NULL,
          PRIMARY KEY (CODIGO_CONFLITO, NOME),
          FOREIGN KEY (CODIGO_CONFLITO) REFERENCES CONFLITO(CODIGO)
        );

        CREATE TABLE LIDER_POLITICO(
          NOME VARCHAR(100) NOT NULL,
          DESCRICAO_APOIO VARCHAR(100) NOT NULL,
          CODIGO_GRUPO_ARMADO INT NOT NULL,
          PRIMARY KEY (NOME),
          FOREIGN KEY (CODIGO_GRUPO_ARMADO) REFERENCES GRUPO_ARMADO (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE
        );

        CREATE TABLE DIVISAO(
          CODIGO INT NOT NULL GENERATED ALWAYS AS IDENTITY,
          NR_BAIXAS CONTAGEM_NUMERICA, /*Checar se >= 0*/
          NR_SOLDADOS CONTAGEM_NUMERICA, /*Checar se >= 0*/
          NR_AVIOES CONTAGEM_NUMERICA, /*Checar se >= 0*/
          NR_BARCOS CONTAGEM_NUMERICA, /*Checar se >= 0*/
          NR_TANQUES CONTAGEM_NUMERICA, /*Checar se >= 0*/
          CODIGO_GRUPO_ARMADO INT NOT NULL,
          PRIMARY KEY (CODIGO),
          FOREIGN KEY (CODIGO_GRUPO_ARMADO) REFERENCES GRUPO_ARMADO(CODIGO) ON DELETE CASCADE ON UPDATE CASCADE /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
        );

        CREATE TABLE CHEFE_MILITAR(
          CODIGO INT NOT NULL GENERATED ALWAYS AS IDENTITY,
          FAIXA_HIERARQUICA INT NOT NULL,
          NOME_LIDER_POLITICO VARCHAR(100) NOT NULL,
          CODIGO_DIVISAO INT NOT NULL,
          PRIMARY KEY (CODIGO),
          FOREIGN KEY (NOME_LIDER_POLITICO) REFERENCES LIDER_POLITICO(NOME) ON DELETE CASCADE ON UPDATE CASCADE, /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
          FOREIGN KEY (CODIGO_DIVISAO) REFERENCES DIVISAO (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
        );

        CREATE TABLE GRUPOS_ARMADOS_ENVOLVIDOS(
          CODIGO_CONFLITO INT NOT NULL,
          CODIGO_GRUPO_ARMADO INT NOT NULL,
          DATA_INCORPORACAO DATE NOT NULL,
          DATA_SAIDA DATE NULL,
          PRIMARY KEY (CODIGO_CONFLITO, CODIGO_GRUPO_ARMADO), /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
          FOREIGN KEY (CODIGO_CONFLITO) REFERENCES CONFLITO (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE, /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
          FOREIGN KEY (CODIGO_GRUPO_ARMADO) REFERENCES GRUPO_ARMADO (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
        );

        CREATE TABLE ORGANIZACOES_ENVOLVIDAS(
          CODIGO_CONFLITO INT NOT NULL,
          CODIGO_ORGANIZACAO INT NOT NULL,
          NR_PESSOAS_MANTIDAS CONTAGEM_NUMERICA, /*Checar se >= 0*/
          TIPO_AJUDA TIPO_AJUDA NOT NULL,
          DATA_INCORPORACAO DATE NOT NULL,
          DATA_SAIDA DATE NULL,
          PRIMARY KEY (CODIGO_CONFLITO, CODIGO_ORGANIZACAO),
          FOREIGN KEY (CODIGO_CONFLITO) REFERENCES CONFLITO(CODIGO) ON DELETE CASCADE ON UPDATE CASCADE, /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
          FOREIGN KEY (CODIGO_ORGANIZACAO) REFERENCES ORGANIZACAO (CODIGO) ON DELETE CASCADE ON UPDATE CASCADE /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
        );

        CREATE TABLE DIALOGA(
          CODIGO_ORGANIZACAO INT NOT NULL,
          NOME_LIDER_POLITICO VARCHAR(100) NOT NULL,
          PRIMARY KEY (CODIGO_ORGANIZACAO, NOME_LIDER_POLITICO),
          FOREIGN KEY (CODIGO_ORGANIZACAO) REFERENCES ORGANIZACAO(CODIGO) ON DELETE CASCADE ON UPDATE CASCADE, /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
          FOREIGN KEY (NOME_LIDER_POLITICO) REFERENCES LIDER_POLITICO(NOME) ON DELETE CASCADE ON UPDATE CASCADE /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
        );

        CREATE TABLE ESTOQUE_TRAFICANTE(
          NOME_TRAFICANTE VARCHAR(100) NOT NULL,
          NOME_TIPO_ARMA VARCHAR(100) NOT NULL,
          QUANTIDADE_DISPONIVEL CONTAGEM_NUMERICA, /*Checar se >= 0*/
          PRIMARY KEY(NOME_TRAFICANTE, NOME_TIPO_ARMA),
          FOREIGN KEY (NOME_TRAFICANTE) REFERENCES TRAFICANTE (NOME) ON DELETE CASCADE ON UPDATE CASCADE, /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
          FOREIGN KEY (NOME_TIPO_ARMA) REFERENCES TIPO_ARMA (NOME) ON DELETE CASCADE ON UPDATE CASCADE /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
        );

        CREATE TABLE FORNECIMENTO_ARMAS(
          CODIGO_GRUPO_ARMADO INT NOT NULL,
          NOME_TIPO_ARMA VARCHAR(100) NOT NULL,
          NOME_TRAFICANTE VARCHAR(100) NOT NULL,
          PRIMARY KEY (CODIGO_GRUPO_ARMADO, NOME_TIPO_ARMA, NOME_TRAFICANTE),
          FOREIGN KEY (CODIGO_GRUPO_ARMADO) REFERENCES GRUPO_ARMADO(CODIGO) ON DELETE CASCADE ON UPDATE CASCADE, /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
          FOREIGN KEY (NOME_TIPO_ARMA) REFERENCES TIPO_ARMA(NOME) ON DELETE CASCADE ON UPDATE CASCADE, /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
          FOREIGN KEY (NOME_TRAFICANTE) REFERENCES TRAFICANTE(NOME) ON DELETE CASCADE ON UPDATE CASCADE /*Colocar o ON DELETE e ON UPDATE, eu imagino que seja CASCADE*/
        );

        COMMIT;
        """);
  }

  private static void createTriggers(Statement statement) {
    System.out.println("Creating triggers...");
  }

  private static void populateTables(Statement statement) {
    System.out.println("Populating tables...");
  }

}
